% SUPPORT FOR KERNEL TRACE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% some theorems requiring proof irrilevance (not implemented yet)

% cic:/matita/basics/logic/lemmaK#def:2
% cic:/matita/basics/jmeq/K#def:2
% cic:/matita/basics/jmeq/E#def:6
% cic:/matita/basics/deqsets/eq_sigma_true#def:5
% cic:/matita/basics/vectors/Vector_eq#def:3
% cic:/matita/basics/vectors/vec_expand#def:5
% cic:/matita/basics/vectors/vector_nil#def:3
% cic:/matita/basics/vectors/change_vec_cons_tail#def:6
% cic:/matita/basics/vectors/pmap_vec_cons#def:9

% some slow theorems (mostly because of missing proof irrelevance)

%   1 cic:/matita/basics/finset/enumn_complete_aux#def:12
%  11 cic:/matita/basics/jmeq/E#def:6
% 168 cic:/matita/basics/vectors/pmap_vec_cons#def:9
% 329 cic:/matita/basics/vectors/vec_expand#def:5
% 371 cic:/matita/basics/vectors/change_vec_cons_tail#def:6
% ??? cic:/matita/basics/vectors/pmap_change#def:10

% on_focus :- on_object cic:/matita/arithmetics/factorial/le_fact_10#def:11.

% utilities %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

trace P :- if on_focus ($print "----<<---- enter: " {$counter "run"} P), P,
           if on_focus ($print "---->>---- exit: " P), !.
trace P :- if on_focus ($print "---->>---- fail: " P), fail.

at_end :- fail.

% predicates in the local environment %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

defs :- on_focus, def X M T S P, $print "*" (def X M T S P), fail.

decs :- on_focus, dec T1 T2, $print "*" (dec T1 T2), fail.

% predicates from kernel_pts %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% inf_type T1 T2 :- on_focus, $print (inf_type T1 T2), at_end.

% has_exp_sort T Y :- on_focus, $print (has_exp_sort T Y), at_end.

% has_checked_type T1 T2 :- on_focus, $print (has_checked_type T1 T2), at_end.

% has_exp_type T1 T2 :- on_focus, $print (has_exp_type T1 T2), at_end.

% predicates from kernel_conversion %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% conv_sn T1 S1 P1 M T2 S2 P2 :- on_focus, $print (conv_sn T1 S1 P1 M T2 S2 P2), at_end.

% conv_dx T1 S1 P1 M T2 S2 P2 :- on_focus, $print (conv_dx T1 S1 P1 M T2 S2 P2), at_end.

% conv_main T1 S1 P1 M T2 S2 P2 :- on_focus, $print (conv_main T1 S1 P1 M T2 S2 P2), at_end.

% conv_whnf T1 S1 P1 M T2 S2 P2 :- on_focus, $print (conv_whnf T1 S1 P1 M T2 S2 P2), at_end.

% conv_stacks S1 S2 :- on_focus, $print (conv_stacks S1 S2), at_end.

% conv_eq T1 T2 :- on_focus, $print (conv_eq T1 T2), at_end.

% conv_sub T1 T2 :- on_focus, $print (conv_sub T1 T2), at_end.

% predicates from kernel_case_branch %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% conv2_whnf T1 S1 P1 M T2 S2 P2 :- on_focus, $print (conv2_whnf T1 S1 P1 M T2 S2 P2), at_end.

% predicates from kernel_computation %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% from_local X M C D :- on_focus, $print (from_local X M), at_end.

% steps T S P M C :- on_focus, $print (steps T S P M), at_end.
